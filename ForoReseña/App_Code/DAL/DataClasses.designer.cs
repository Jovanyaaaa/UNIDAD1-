#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProjectoFORO")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertComentario(Comentario instance);
    partial void UpdateComentario(Comentario instance);
    partial void DeleteComentario(Comentario instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertPelicula(Pelicula instance);
    partial void UpdatePelicula(Pelicula instance);
    partial void DeletePelicula(Pelicula instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProjectoFOROConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Comentario> Comentario
		{
			get
			{
				return this.GetTable<Comentario>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticia
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Pelicula> Pelicula
		{
			get
			{
				return this.GetTable<Pelicula>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comentario")]
	public partial class Comentario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginID;
		
		private string _Texto;
		
		private string _Valoracion;
		
		private System.Nullable<long> _IDPelicula;
		
		private EntityRef<Pelicula> _Pelicula;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    partial void OnValoracionChanging(string value);
    partial void OnValoracionChanged();
    partial void OnIDPeliculaChanging(System.Nullable<long> value);
    partial void OnIDPeliculaChanged();
    #endregion
		
		public Comentario()
		{
			this._Pelicula = default(EntityRef<Pelicula>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valoracion", DbType="NVarChar(100)")]
		public string Valoracion
		{
			get
			{
				return this._Valoracion;
			}
			set
			{
				if ((this._Valoracion != value))
				{
					this.OnValoracionChanging(value);
					this.SendPropertyChanging();
					this._Valoracion = value;
					this.SendPropertyChanged("Valoracion");
					this.OnValoracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPelicula", DbType="BigInt")]
		public System.Nullable<long> IDPelicula
		{
			get
			{
				return this._IDPelicula;
			}
			set
			{
				if ((this._IDPelicula != value))
				{
					if (this._Pelicula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPeliculaChanging(value);
					this.SendPropertyChanging();
					this._IDPelicula = value;
					this.SendPropertyChanged("IDPelicula");
					this.OnIDPeliculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelicula_Comentario", Storage="_Pelicula", ThisKey="IDPelicula", OtherKey="IDPelicula", IsForeignKey=true)]
		public Pelicula Pelicula
		{
			get
			{
				return this._Pelicula.Entity;
			}
			set
			{
				Pelicula previousValue = this._Pelicula.Entity;
				if (((previousValue != value) 
							|| (this._Pelicula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pelicula.Entity = null;
						previousValue.Comentario.Remove(this);
					}
					this._Pelicula.Entity = value;
					if ((value != null))
					{
						value.Comentario.Add(this);
						this._IDPelicula = value.IDPelicula;
					}
					else
					{
						this._IDPelicula = default(Nullable<long>);
					}
					this.SendPropertyChanged("Pelicula");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Usuario", ThisKey="LoginID", OtherKey="LoginID", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Comentario = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Comentario = this;
						this._LoginID = value.LoginID;
					}
					else
					{
						this._LoginID = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<long> _IDPelicula;
		
		private long _IDNoticia;
		
		private string _Texto;
		
		private EntityRef<Pelicula> _Pelicula;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPeliculaChanging(System.Nullable<long> value);
    partial void OnIDPeliculaChanged();
    partial void OnIDNoticiaChanging(long value);
    partial void OnIDNoticiaChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    #endregion
		
		public Noticia()
		{
			this._Pelicula = default(EntityRef<Pelicula>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPelicula", DbType="BigInt")]
		public System.Nullable<long> IDPelicula
		{
			get
			{
				return this._IDPelicula;
			}
			set
			{
				if ((this._IDPelicula != value))
				{
					if (this._Pelicula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPeliculaChanging(value);
					this.SendPropertyChanging();
					this._IDPelicula = value;
					this.SendPropertyChanged("IDPelicula");
					this.OnIDPeliculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNoticia", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDNoticia
		{
			get
			{
				return this._IDNoticia;
			}
			set
			{
				if ((this._IDNoticia != value))
				{
					this.OnIDNoticiaChanging(value);
					this.SendPropertyChanging();
					this._IDNoticia = value;
					this.SendPropertyChanged("IDNoticia");
					this.OnIDNoticiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texto", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelicula_Noticia", Storage="_Pelicula", ThisKey="IDPelicula", OtherKey="IDPelicula", IsForeignKey=true)]
		public Pelicula Pelicula
		{
			get
			{
				return this._Pelicula.Entity;
			}
			set
			{
				Pelicula previousValue = this._Pelicula.Entity;
				if (((previousValue != value) 
							|| (this._Pelicula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pelicula.Entity = null;
						previousValue.Noticia.Remove(this);
					}
					this._Pelicula.Entity = value;
					if ((value != null))
					{
						value.Noticia.Add(this);
						this._IDPelicula = value.IDPelicula;
					}
					else
					{
						this._IDPelicula = default(Nullable<long>);
					}
					this.SendPropertyChanged("Pelicula");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pelicula")]
	public partial class Pelicula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDPelicula;
		
		private string _Nombre;
		
		private System.DateTime _Duracion;
		
		private string _Elenco;
		
		private string _Director;
		
		private string _Reseña;
		
		private EntitySet<Comentario> _Comentario;
		
		private EntitySet<Noticia> _Noticia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPeliculaChanging(long value);
    partial void OnIDPeliculaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDuracionChanging(System.DateTime value);
    partial void OnDuracionChanged();
    partial void OnElencoChanging(string value);
    partial void OnElencoChanged();
    partial void OnDirectorChanging(string value);
    partial void OnDirectorChanged();
    partial void OnReseñaChanging(string value);
    partial void OnReseñaChanged();
    #endregion
		
		public Pelicula()
		{
			this._Comentario = new EntitySet<Comentario>(new Action<Comentario>(this.attach_Comentario), new Action<Comentario>(this.detach_Comentario));
			this._Noticia = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticia), new Action<Noticia>(this.detach_Noticia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPelicula", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDPelicula
		{
			get
			{
				return this._IDPelicula;
			}
			set
			{
				if ((this._IDPelicula != value))
				{
					this.OnIDPeliculaChanging(value);
					this.SendPropertyChanging();
					this._IDPelicula = value;
					this.SendPropertyChanged("IDPelicula");
					this.OnIDPeliculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duracion", DbType="DateTime NOT NULL")]
		public System.DateTime Duracion
		{
			get
			{
				return this._Duracion;
			}
			set
			{
				if ((this._Duracion != value))
				{
					this.OnDuracionChanging(value);
					this.SendPropertyChanging();
					this._Duracion = value;
					this.SendPropertyChanged("Duracion");
					this.OnDuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elenco", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Elenco
		{
			get
			{
				return this._Elenco;
			}
			set
			{
				if ((this._Elenco != value))
				{
					this.OnElencoChanging(value);
					this.SendPropertyChanging();
					this._Elenco = value;
					this.SendPropertyChanged("Elenco");
					this.OnElencoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Director", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Director
		{
			get
			{
				return this._Director;
			}
			set
			{
				if ((this._Director != value))
				{
					this.OnDirectorChanging(value);
					this.SendPropertyChanging();
					this._Director = value;
					this.SendPropertyChanged("Director");
					this.OnDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reseña", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reseña
		{
			get
			{
				return this._Reseña;
			}
			set
			{
				if ((this._Reseña != value))
				{
					this.OnReseñaChanging(value);
					this.SendPropertyChanging();
					this._Reseña = value;
					this.SendPropertyChanged("Reseña");
					this.OnReseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelicula_Comentario", Storage="_Comentario", ThisKey="IDPelicula", OtherKey="IDPelicula")]
		public EntitySet<Comentario> Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				this._Comentario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pelicula_Noticia", Storage="_Noticia", ThisKey="IDPelicula", OtherKey="IDPelicula")]
		public EntitySet<Noticia> Noticia
		{
			get
			{
				return this._Noticia;
			}
			set
			{
				this._Noticia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Pelicula = this;
		}
		
		private void detach_Comentario(Comentario entity)
		{
			this.SendPropertyChanging();
			entity.Pelicula = null;
		}
		
		private void attach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Pelicula = this;
		}
		
		private void detach_Noticia(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Pelicula = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginID;
		
		private string _Password;
		
		private string _Nombre;
		
		private string _Email;
		
		private bool _Administrador;
		
		private EntityRef<Comentario> _Comentario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    #endregion
		
		public Usuario()
		{
			this._Comentario = default(EntityRef<Comentario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginID
		{
			get
			{
				return this._LoginID;
			}
			set
			{
				if ((this._LoginID != value))
				{
					this.OnLoginIDChanging(value);
					this.SendPropertyChanging();
					this._LoginID = value;
					this.SendPropertyChanged("LoginID");
					this.OnLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(200)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Comentario", Storage="_Comentario", ThisKey="LoginID", OtherKey="LoginID", IsUnique=true, IsForeignKey=false)]
		public Comentario Comentario
		{
			get
			{
				return this._Comentario.Entity;
			}
			set
			{
				Comentario previousValue = this._Comentario.Entity;
				if (((previousValue != value) 
							|| (this._Comentario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comentario.Entity = null;
						previousValue.Usuario = null;
					}
					this._Comentario.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
					}
					this.SendPropertyChanged("Comentario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
